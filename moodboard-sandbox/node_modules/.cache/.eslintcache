[{"/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/index.js":"1","/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/App.js":"2","/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/Navbar.js":"3","/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/Home.js":"4","/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/BlogList.js":"5","/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/useFetch.js":"6","/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/Create.js":"7","/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/BlogDetails.js":"8","/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/NotFound.js":"9","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/index.js":"10","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/App.js":"11","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/NotFound.js":"12","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/Navbar.js":"13","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/Home.js":"14","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/Create.js":"15","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/useFetch.js":"16","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/Vibe.js":"17","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/NFTDetails.js":"18","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/NFTList.js":"19","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/Login.js":"20","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/Mood.js":"21"},{"size":467,"mtime":1653087381538,"results":"22","hashOfConfig":"23"},{"size":847,"mtime":1653974032364,"results":"24","hashOfConfig":"23"},{"size":343,"mtime":1653970002421,"results":"25","hashOfConfig":"23"},{"size":1868,"mtime":1653970787852,"results":"26","hashOfConfig":"23"},{"size":752,"mtime":1653971087547,"results":"27","hashOfConfig":"23"},{"size":1135,"mtime":1653970543202,"results":"28","hashOfConfig":"23"},{"size":2046,"mtime":1653973539388,"results":"29","hashOfConfig":"23"},{"size":973,"mtime":1653973757086,"results":"30","hashOfConfig":"23"},{"size":294,"mtime":1653974437624,"results":"31","hashOfConfig":"23"},{"size":467,"mtime":1653087381538,"results":"32","hashOfConfig":"33"},{"size":967,"mtime":1653988838259,"results":"34","hashOfConfig":"33"},{"size":294,"mtime":1653974437624,"results":"35","hashOfConfig":"33"},{"size":348,"mtime":1653980747910,"results":"36","hashOfConfig":"33"},{"size":487,"mtime":1653987230886,"results":"37","hashOfConfig":"33"},{"size":2046,"mtime":1653979706752,"results":"38","hashOfConfig":"33"},{"size":1135,"mtime":1653978763958,"results":"39","hashOfConfig":"33"},{"size":1840,"mtime":1653988949349,"results":"40","hashOfConfig":"33"},{"size":866,"mtime":1653983674692,"results":"41","hashOfConfig":"33"},{"size":998,"mtime":1653987300586,"results":"42","hashOfConfig":"33"},{"size":1651,"mtime":1653987250858,"results":"43","hashOfConfig":"33"},{"size":452,"mtime":1653989362620,"results":"44","hashOfConfig":"33"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"rc44a6",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pogpic",{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},"/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/index.js",[],[],[],"/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/App.js",["117","118","119"],[],"import Navbar from './Navbar'\nimport Home from './Home'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n  const title = 'Welcome to the New Blog';\n  const likes = 50;\n  // const person = { name: 'yoshi', age: 30 };\n  const link = \"http://www.google.com\"\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Routes>\n            <Route exact path=\"/\" element={<Home/>}/>\n            <Route path=\"/create\" element={<Create/>}/>\n            <Route path=\"/blogs/:id\" element={<BlogDetails/>}/>\n            <Route path=\"*\" element={<NotFound/>}/>\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/Navbar.js",[],[],"/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/Home.js",[],[],"/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/BlogList.js",[],[],"/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/useFetch.js",[],[],"/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/Create.js",[],[],"/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/BlogDetails.js",[],[],"/Users/michellehuang/Documents/code/react-practice/dojo-blog/src/NotFound.js",[],[],"/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/index.js",[],[],"/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/App.js",["120"],[],"import Navbar from './Navbar'\nimport Home from './Home'\nimport Vibe from './Vibe'\nimport Login from './Login'\nimport Mood from './Mood'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Create from './Create';\nimport NFTDetails from './NFTDetails';\nimport NotFound from './NotFound';\n\n\nfunction App() {\n  const title = 'welcome to web3';\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Routes>\n            <Route exact path=\"/\" element={<Home/>}/>\n            <Route path=\"/create\" element={<Create/>}/>\n            <Route path=\"/vibe\" element={<Vibe/>}/>\n            <Route path=\"/login\" element={<Login/>}/>\n            <Route path=\"/mood\" element={<Mood/>}/>\n            <Route path=\"/nfts/:id\" element={<NFTDetails/>}/>\n            <Route path=\"*\" element={<NotFound/>}/>\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n",[],"/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/NotFound.js",[],[],"/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/Navbar.js",[],[],"/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/Home.js",["121"],[],"import { useNavigate } from \"react-router-dom\";\n\nconst Home = () => {\n    let navigate = useNavigate();\n\n    const handleClick = () => {\n            navigate('/login');\n        }\n\n    return ( \n        <div className=\"home\">\n            <h1>((vibe.af))</h1>\n            <h2>// curate your nft moodboard</h2>\n            {/* <h2>// set the soundtrack of your life</h2> */}\n            <button onClick={handleClick}>~ start vibing ~</button>\n        </div>\n     );\n}\n \nexport default Home;","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/Create.js",[],[],"/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/useFetch.js",[],[],"/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/Vibe.js",["122","123"],[],"import { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\"\n\nimport NFTList from \"./NFTList\";\nimport useFetch from \"./useFetch\";\n\nconst Vibe = () => {\n\n    // const { data: vibes, isPending, error } = useFetch('http://localhost:8000/vibes');\n    const { data: vibes, error } = useFetch('http://localhost:8000/vibes');\n    const { data: nfts} = useFetch('http://localhost:8000/nfts');\n\n    const [vibeTitle, setVibeTitle] = useState('');\n    const [isPending, setIsPending] = useState(false);\n    const navigate = useNavigate();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const vibe = { vibeTitle };\n\n        setIsPending(true);\n\n        fetch('http://localhost:8000/vibes', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(vibe)\n        }).then(() => {\n            console.log('new vibe added');\n            setIsPending(false);\n            navigate('/mood')\n        })\n\n    }\n\n    return ( \n        <div className=\"vibe\">\n\n            { error && <div> {error} </div> }\n            { isPending && <div>Loading...</div> }\n\n            <h1>ch00se ur m00d</h1>\n\n            {nfts && <NFTList nfts = {nfts} nftTitle=\"your NFTs\"/>}\n\n            <h1>¿what’s the vibe?</h1>\n            <p>examples: indie summer, party, rainy days, technofuturism</p>\n            <form onSubmit={handleSubmit}>\n                <input \n                    type=\"text\"\n                    required\n                    value={vibeTitle}\n                    onChange={(e) => setVibeTitle(e.target.value)}\n                />\n                { !isPending && <button>add vibe</button>}\n                { isPending && <button disabled>now vibing...</button>}\n            </form>\n            \n        </div>\n     );\n}\n \nexport default Vibe;","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/NFTDetails.js",[],[],"/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/NFTList.js",["124"],[],"import { Link } from \"react-router-dom\";\n\nconst NFTList = ({ nfts, nftTitle}) => {\n    const API_KEY = process.env.OPENSEA_KEY;\n\n    const options = {\n        method: 'GET',\n        headers: {Accept: 'application/json', 'X-API-KEY': API_KEY}\n      };\n      \n      fetch('https://api.opensea.io/api/v1/assets?owner=0x9663eeFD2817572dB25A7C0a0E6CCcB3F0e5f121&order_direction=desc&limit=20&include_orders=false', options)\n        .then(response => response.json())\n        .then(response => console.log(response))\n        .catch(err => console.error(err));\n\n    return (\n        <div className=\"nft-list\">\n            <h2>{ nftTitle }</h2>\n            {nfts.map((nft) => (\n                <div className=\"vibe-preview\" key={nft.id}>\n                    <Link to={`/nfts/${nft.id}`}>\n                        <h2>{ nft.nftTitle }</h2>\n                        <img src={ nft.image_url }/>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default NFTList;","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/Login.js",["125","126"],[],"import { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\"\n\nimport useFetch from \"./useFetch\";\n\nconst Login = () => {\n    // const { data: addresses} = useFetch('http://localhost:8000/addresses');\n    \n    const [address, setAddress] = useState('');\n    const [isPending, setIsPending] = useState(false);\n    const navigate = useNavigate();\n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n        // const address = { address };\n\n        setIsPending(true);\n        console.log('sent');\n        console.log(address);\n\n        navigate('/vibe');\n\n        // TODO: rewrite to grab nfts from address and store them in db\n\n        // fetch('http://localhost:8000/addresses', {\n        //     method: 'POST',\n        //     headers: { \"Content-Type\": \"application/json\" },\n        //     body: JSON.stringify(address)\n        // }).then(() => {\n        //     console.log('new address added');\n        //     setIsPending(false);\n        //     navigate('/vibe')\n        // })\n    }\n\n    return ( \n        <div className=\"login\">\n            <h2>hemlo</h2>\n            <h1>gib us ur eth address</h1>\n            <p>(we promise we won't steal ur money)</p>\n            \n            <form onSubmit={handleSubmit}>\n                <input \n                    type=\"text\"\n                    required\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                />\n                { !isPending && <button>send it</button>}\n                { isPending && <button disabled>hehehe...</button>}\n            </form>\n        </div>\n\n     );\n}\n \nexport default Login;","/Users/michellehuang/Documents/code/react-practice/af-moodboard/src/Mood.js",["127"],[],"import { Link } from \"react-router-dom\";\n\nconst Mood = () => {\n    return ( \n        <div className=\"mood\">\n            <h1>'tis witching season</h1>\n            <img src=\"https://lh3.googleusercontent.com/nuRfpVi60njfv6ee3_HxEPS7NHebd9cxioW6C7-H8YUR74h0UWUP_lOiPDMIiTIO7eBSSnuu4xxuoCNxjOQTQ352efiTvQWOHMmt-Q\"/>\n            <p>fullscreen</p>\n            <Link to=\"/\">want this as your screensaver?</Link>\n        </div>\n     );\n}\n \nexport default Mood;",{"ruleId":"128","severity":1,"message":"129","line":9,"column":9,"nodeType":"130","messageId":"131","endLine":9,"endColumn":14},{"ruleId":"128","severity":1,"message":"132","line":10,"column":9,"nodeType":"130","messageId":"131","endLine":10,"endColumn":14},{"ruleId":"128","severity":1,"message":"133","line":12,"column":9,"nodeType":"130","messageId":"131","endLine":12,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":13,"column":9,"nodeType":"130","messageId":"131","endLine":13,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":13,"column":17,"nodeType":"136","messageId":"137","endLine":13,"endColumn":45},{"ruleId":"128","severity":1,"message":"138","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"139","line":10,"column":19,"nodeType":"130","messageId":"131","endLine":10,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":23,"column":25,"nodeType":"142","endLine":23,"endColumn":53},{"ruleId":"128","severity":1,"message":"138","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"143","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":7,"column":13,"nodeType":"142","endLine":7,"endColumn":162},"no-unused-vars","'title' is assigned a value but never used.","Identifier","unusedVar","'likes' is assigned a value but never used.","'link' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","'Link' is defined but never used.","'vibes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useFetch' is defined but never used."]